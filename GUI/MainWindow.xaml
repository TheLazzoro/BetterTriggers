<Window x:Class="GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        UseLayoutRounding="True"
        mc:Ignorable="d"
        TextOptions.TextFormattingMode="Display"
        Title="Better Triggers" Height="686" Width="994" MinWidth="750" Background="{DynamicResource BackgroundDarkest}" Closing="Window_Closing" SizeChanged="Window_SizeChanged" LocationChanged="Window_LocationChanged" StateChanged="Window_StateChanged" >
        

    <Window.Resources>

        <!--MENU-->

        <Style x:Key="{x:Type Menu}" TargetType="Menu">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Menu">
                        <Border x:Name="MainMenu" Background="{DynamicResource TopMenuBackground}">
                            <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="MenuItemControlTemplate1" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" 
                BorderBrush="#0000" 
                CornerRadius="0" 
                BorderThickness="1" 
                Background="{TemplateBinding Background}" 
                SnapsToDevicePixels="True">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>


                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup x:Name="PART_Popup"  AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                        <Border x:Name="SubMenuBorder" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" Background="{DynamicResource BackgroundPanel}" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>

                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource TopMenuButtonHighlight}"/>
                    <Setter Property="BorderThickness" TargetName="templateRoot" Value="1"></Setter>
                </Trigger>

                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource TopMenuButtonClicked}" />
                    <Setter Property="Header" Value="Test" />
                    <Setter Property="BorderThickness" Value="1"></Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>



        <!-- I don't know much about styling, but this is what is happening:
        The below menu style is needed for the top menu strip, but it overrides
        styles for the entire project.
        However, we still need a style for ContextMenu in TriggerControl
        and TriggerExplorer because it doesn't override all of it...
        
        -->

        <!-- SubmenuItem -->
        <!--

        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
            <Border Name="Border">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="Shortcut" />
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Name="Icon"
                                  Margin="6,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon" />
                    <Border Name="Check"
                        Width="13"
                        Height="13"
                        Visibility="Collapsed"
                        Margin="6,0,6,0"
                        Background="#0000"
                        BorderThickness="0"
                        BorderBrush="#5082a4">
                        <Path Name="CheckMark"
                          Width="10"
                          Height="10"
                          Visibility="Hidden"
                          SnapsToDevicePixels="False"
                          Stroke="#0a0"
                          StrokeThickness="2"
                          Data="F1 M 0.468732,4.66838L 3.03345,7.95443L 7.28127,0.420569" />
                    </Border>
                    <ContentPresenter Name="HeaderHost"
                                  Grid.Column="1"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="5,2,0,2"
                           DockPanel.Dock="Right" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon"
                     Value="{x:Null}">
                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Hidden" />
                </Trigger>
                <Trigger Property="IsChecked"
                     Value="true">
                    <Setter TargetName="CheckMark"
                        Property="Visibility"
                        Value="Visible" />
                </Trigger>
                <Trigger Property="IsChecked"
                     Value="false">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                    <Setter TargetName="CheckMark" Property="Stroke" Value="#f44" />
                    <Setter TargetName="CheckMark" Property="Data" Value="M 0 0 L 7 7 M 0 7 L 7 0" />
                </Trigger>
                <Trigger Property="IsCheckable"
                     Value="true">
                    <Setter TargetName="Check"
                        Property="Visibility"
                        Value="Visible" />
                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Hidden" />
                </Trigger>
                <Trigger Property="IsHighlighted"
                     Value="true">
                    <Setter TargetName="Border"
                        Property="Background"
                        Value="#5082a4" />
                </Trigger>
                <Trigger Property="IsEnabled"
                     Value="false">
                    <Setter Property="Foreground"
                        Value="#555" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        -->


        <!-- SubmenuHeader -->

        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
            <Border Name="Border" BorderThickness="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Name="Icon"
                                  Margin="6,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon" />
                    <ContentPresenter Name="HeaderHost"
                                  Grid.Column="1"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="5,2,2,2"
                           DockPanel.Dock="Right" />
                    <Path Grid.Column="3"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 0 7 L 4 3.5 Z"
                      Fill="#eee" />
                    <Popup Name="Popup"
                       Placement="Right"
                       HorizontalOffset="-4"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Fade">
                        <Border Name="SubmenuBorder"
                            SnapsToDevicePixels="True"
                            Background="{DynamicResource BackgroundPanel}"
                            BorderBrush="{DynamicResource BorderBrush}"
                            BorderThickness="1">
                            <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#408d" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#19c" />
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0" />
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="#0f3c5a" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <!-- COMMAND DEFINITIONS -->
        <RoutedUICommand x:Key="NewProject"></RoutedUICommand>
        <RoutedUICommand x:Key="OpenProject"></RoutedUICommand>
        <RoutedUICommand x:Key="SaveProject"></RoutedUICommand>
        <RoutedUICommand x:Key="CloseProject"></RoutedUICommand>
        <RoutedUICommand x:Key="OpenProjectSettings"></RoutedUICommand>
        <RoutedUICommand x:Key="ImportTriggers"></RoutedUICommand>

        <RoutedUICommand x:Key="Undo"></RoutedUICommand>
        <RoutedUICommand x:Key="Redo"></RoutedUICommand>

        <RoutedUICommand x:Key="NewCategory"></RoutedUICommand>
        <RoutedUICommand x:Key="NewTrigger"></RoutedUICommand>
        <RoutedUICommand x:Key="NewScript"></RoutedUICommand>
        <RoutedUICommand x:Key="NewGlobalVariable"></RoutedUICommand>

        <RoutedUICommand x:Key="NewEvent"></RoutedUICommand>
        <RoutedUICommand x:Key="NewCondition"></RoutedUICommand>
        <RoutedUICommand x:Key="NewLocalVariable"></RoutedUICommand>
        <RoutedUICommand x:Key="NewAction"></RoutedUICommand>

        <RoutedUICommand x:Key="ValidateTriggers"></RoutedUICommand>
        <RoutedUICommand x:Key="TestMap"></RoutedUICommand>
        <RoutedUICommand x:Key="BuildMap"></RoutedUICommand>
        
    </Window.Resources>


    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource NewProject}" CanExecute="CommandBinding_CanExecute_NewProject" Executed="CommandBinding_Executed_NewProject"/>
        <CommandBinding Command="{StaticResource OpenProject}" CanExecute="CommandBinding_CanExecute_OpenProject" Executed="CommandBinding_Executed_OpenProject"/>
        <CommandBinding Command="{StaticResource SaveProject}" CanExecute="CommandBinding_CanExecute_IsProjectActive" Executed="CommandBinding_Executed_Save"/>
        <CommandBinding Command="{StaticResource CloseProject}" CanExecute="CommandBinding_CanExecute_IsProjectActive" Executed="CommandBinding_Executed_CloseProject"/>
        <CommandBinding Command="{StaticResource ImportTriggers}" CanExecute="CommandBinding_CanExecute_IsProjectActive" Executed="CommandBinding_Executed_ImportTriggers"/>
        <CommandBinding Command="{StaticResource OpenProjectSettings}" CanExecute="CommandBinding_CanExecute_IsProjectActive" Executed="CommandBinding_Executed_OpenProjectSettings"/>

        <CommandBinding Command="{StaticResource Undo}" CanExecute="CommandBinding_CanExecute_Undo" Executed="CommandBinding_Executed_Undo"/>
        <CommandBinding Command="{StaticResource Redo}" CanExecute="CommandBinding_CanExecute_Redo" Executed="CommandBinding_Executed_Redo"/>

        <CommandBinding Command="{StaticResource NewCategory}" CanExecute="CommandBinding_CanExecute_IsProjectActive" Executed="CommandBinding_Executed_NewCategory"/>
        <CommandBinding Command="{StaticResource NewTrigger}" CanExecute="CommandBinding_CanExecute_IsProjectActive" Executed="CommandBinding_Executed_NewTrigger"/>
        <CommandBinding Command="{StaticResource NewScript}" CanExecute="CommandBinding_CanExecute_IsProjectActive" Executed="CommandBinding_Executed_NewScript"/>
        <CommandBinding Command="{StaticResource NewGlobalVariable}" CanExecute="CommandBinding_CanExecute_IsProjectActive" Executed="CommandBinding_Executed_NewGlobalVariable"/>

        <CommandBinding Command="{StaticResource NewEvent}" CanExecute="CommandBinding_CanExecute_IsControlTrigger" Executed="CommandBinding_Executed_NewEvent"/>
        <CommandBinding Command="{StaticResource NewCondition}" CanExecute="CommandBinding_CanExecute_IsControlTrigger" Executed="CommandBinding_Executed_NewCondition"/>
        <CommandBinding Command="{StaticResource NewLocalVariable}" CanExecute="CommandBinding_CanExecute_IsControlTrigger" Executed="CommandBinding_Executed_NewLocalVariable"/>
        <CommandBinding Command="{StaticResource NewAction}" CanExecute="CommandBinding_CanExecute_IsControlTrigger" Executed="CommandBinding_Executed_NewAction"/>

        <CommandBinding Command="{StaticResource ValidateTriggers}" CanExecute="CommandBinding_CanExecute_IsProjectActive" Executed="CommandBinding_Executed_ValidateTriggers" />
        <CommandBinding Command="{StaticResource TestMap}" CanExecute="CommandBinding_CanExecute_IsProjectActive" Executed="CommandBinding_Executed_TestMap"/>
        <CommandBinding Command="{StaticResource BuildMap}" CanExecute="CommandBinding_CanExecute_IsProjectActive" Executed="CommandBinding_Executed_BuildMap"/>
        
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding x:Name="keybindingNewProject" Command="{StaticResource NewProject}" Key="N" Modifiers="Ctrl"/>
        <KeyBinding x:Name="keybindingOpenProject" Command="{StaticResource OpenProject}" Key="O" Modifiers="Ctrl"/>
        <KeyBinding x:Name="keybindingSaveProject" Command="{StaticResource SaveProject}" Key="S" Modifiers="Ctrl"/>

        <KeyBinding x:Name="keybindingUndo" Command="{StaticResource Undo}" Key="Z" Modifiers="Ctrl"/>
        <KeyBinding x:Name="keybindingRedo" Command="{StaticResource Redo}" Key="Y" Modifiers="Ctrl"/>

        <KeyBinding x:Name="keybindingNewCategory" Command="{StaticResource NewCategory}" Key="G" Modifiers="Ctrl"/>
        <KeyBinding x:Name="keybindingNewTrigger" Command="{StaticResource NewTrigger}" Key="T" Modifiers="Ctrl"/>
        <KeyBinding x:Name="keybindingNewScript" Command="{StaticResource NewScript}" Key="U" Modifiers="Ctrl"/>
        <KeyBinding x:Name="keybindingNewVariable" Command="{StaticResource NewGlobalVariable}" Key="L" Modifiers="Ctrl"/>

        <KeyBinding x:Name="keybindingNewEvent" Command="{StaticResource NewEvent}" Key="E" Modifiers="Ctrl"/>
        <KeyBinding x:Name="keybindingNewCondition" Command="{StaticResource NewCondition}" Key="D" Modifiers="Ctrl"/>
        <KeyBinding x:Name="keybindingNewLocalVariable" Command="{StaticResource NewLocalVariable}" Key="K" Modifiers="Ctrl"/>
        <KeyBinding x:Name="keybindingNewAction" Command="{StaticResource NewAction}" Key="W" Modifiers="Ctrl"/>

        <KeyBinding x:Name="keybindingValidateTriggers" Command="{StaticResource ValidateTriggers}" Key="F10" Modifiers="Ctrl"/>
        <KeyBinding x:Name="keybindingTestMap" Command="{StaticResource TestMap}" Key="F9" Modifiers="Ctrl"/>
        <KeyBinding x:Name="keybindingBuildMap" Command="{StaticResource BuildMap}" Key="B" Modifiers="Ctrl"/>
        
    </Window.InputBindings>

    <Grid x:Name="mainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="28"/>
            <RowDefinition Height="4"/>
            <RowDefinition Height="125"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="rowTriggerExplorer" Width="250" MinWidth="100"/>
            <ColumnDefinition Width="*" MinWidth="200"/>
        </Grid.ColumnDefinitions>


        <Menu Grid.Column="0"  Grid.Row="0" Grid.ColumnSpan="2" Background="{DynamicResource TopMenuBackground}" Foreground="{DynamicResource TextBrush2}" MouseLeftButtonDown="Menu_MouseLeftButtonDown" >
            <MenuItem x:Name="menuFile" Header="WESTRING_MENU_FILE" Height="25" Template="{DynamicResource MenuItemControlTemplate1}" >
                <MenuItem Name="menuNewProject" Command="{StaticResource NewProject}" InputGestureText="Ctrl+N" Header="New Project..." />
                <MenuItem Name="menuOpen" Command="{StaticResource OpenProject}" InputGestureText="Ctrl+O" Header="Open Project..." />
                <MenuItem Name="menuSave" Command="{StaticResource SaveProject}" InputGestureText="Ctrl+S" Header="Save All" />
                <MenuItem Name="menuClose" Command="{StaticResource CloseProject}" Header="Close Project" />
                <Separator Margin="0,5,0,4" />
                <MenuItem Name="menuImportTriggers" Command="{StaticResource ImportTriggers}" Header="Import Triggers..." />
                <Separator Margin="0,5,0,4" />
                <Separator />
                <MenuItem Name="menuProjectSettings" Command="{StaticResource OpenProjectSettings}" Header="Project Settings" />
                <Separator />
                <MenuItem Name="menuRecentFiles" Header="Recent Files"  MouseEnter="menuRecentFiles_MouseEnter" />
            </MenuItem>
            <MenuItem x:Name="menuEdit" Header="WESTRING_MENU_EDIT" Height="25" Template="{DynamicResource MenuItemControlTemplate1}" SubmenuOpened="MenuItem_SubmenuOpened">
                <MenuItem Name="menuItemUndo" Command="{StaticResource Undo}" InputGestureText="Ctrl+Z" Header="Undo" />
                <MenuItem Name="menuItemRedo" Command="{StaticResource Redo}" InputGestureText="Ctrl+Y" Header="Redo" />
            </MenuItem>
            <MenuItem x:Name="menuNew" Header="WESTRING_MENU_TE_NEW" Template="{DynamicResource MenuItemControlTemplate1}" Height="25">
                <MenuItem Name="menuNewCategory" Command="{StaticResource NewCategory}" InputGestureText="Ctrl+G" Header="WESTRING_DEVAL_DCAT"/>
                <MenuItem Name="menuNewTrigger" Command="{StaticResource NewTrigger}" InputGestureText="Ctrl+T" Header="WESTRING_DLGE_TRIGGER"/>
                <MenuItem Name="menuNewScript" Command="{StaticResource NewScript}" InputGestureText="Ctrl+U" Header="WESTRING_TRIGCAT_CUSTOM"/>
                <MenuItem Name="menuNewVariable" Command="{StaticResource NewGlobalVariable}" InputGestureText="Ctrl+L" Header="WESTRING_MENU_GLOBLALVARIABLE" />
                <Separator></Separator>
                <MenuItem Name="menuNewEvent" Command="{StaticResource NewEvent}" InputGestureText="Ctrl+E" Header="WESTRING_MENU_EVENT" />
                <MenuItem Name="menuNewCondition" Command="{StaticResource NewCondition}" InputGestureText="Ctrl+D" Header="WESTRING_MENU_CONDITION" />
                <MenuItem Name="menuNewLocalVariable" Command="{StaticResource NewLocalVariable}" InputGestureText="Ctrl+K" Header="Local Variable..." />
                <MenuItem Name="menuNewAction" Command="{StaticResource NewAction}" InputGestureText="Ctrl+W" Header="WESTRING_MENU_ACTION" />
            </MenuItem>
            <!--<MenuItem x:Name="menuJassHelper" Header="WESTRING_MENU_JASSHELPER" Template="{DynamicResource MenuItemControlTemplate1}" Height="25">
                <MenuItem Name="menuEnableJassHelper" Header="WESTRING_MENU_JASSHELPER_TOGGLE" />
                <MenuItem Name="menuEnableVJass" Header="WESTRING_MENU_JASSHELPER_TOGGLE_VJASS" />
                <MenuItem Name="menuEnableDebugMode" Header="WESTRING_MENU_JASSHELPER_TOGGLE_DEBUG" />
                <MenuItem Name="menuEnableOptimizer" Header="WESTRING_MENU_JASSHELPER_TOGGLE_OPTIMIZER" />
            </MenuItem>-->
            <MenuItem x:Name="menuTools" Header="WESTRING_MENU_TOOLS" Template="{DynamicResource MenuItemControlTemplate1}" Height="25">
                <MenuItem  Name="menuItemKeybindings" Header="Keybindings" Click="menuItemKeybindings_Click"  />
                <MenuItem  Name="menuItemOptions" Header="Options" Click="menuItemOptions_Click" />
            </MenuItem>
            <MenuItem x:Name="menuHelp" Header="Help" Template="{DynamicResource MenuItemControlTemplate1}" Height="25">
                <MenuItem  Name="menuItemHelp" Header="Better Triggers Help..." Click="menuItemHelp_Click" />
                <MenuItem  Name="menuItemCheckVersion" Header="Check Version" Click="menuItemCheckVersion_Click" />
                <Separator/>
                <MenuItem  Name="menuItemAbout" Header="About..." Click="menuItemAbout_Click" />
            </MenuItem>
        </Menu>

        <Rectangle Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Top" Height="2" />
        <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Fill="{DynamicResource TopMenuBackground}" MouseLeftButtonDown="Rectangle_MouseLeftButtonDown" />

        <ItemsControl Grid.Row="1" Grid.ColumnSpan="2" Margin="10,0,0,0">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Content="{Binding}" Margin="0,0,5,5" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <Button x:Name="btnNewMap" ToolTip="WESTRING_TOOLBAR_NEW" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnNewMap_Click"  >
                <Button.Content>
                    <Image Source="Resources/Icons/map.png" Stretch="Fill"/>
                </Button.Content>
            </Button>
            <!--<Button x:Name="btnOpenMap" ToolTip="WESTRING_TOOLBAR_OPEN" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnOpenMap_Click"  >-->
            <Button x:Name="btnOpenMap" ToolTip="Open Project..." Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnOpenMap_Click"  >
                <Button.Content>
                    <Image Source="Resources/Icons/ui-editoricon-general_open.png" Stretch="Fill" />
                </Button.Content>
            </Button>
            <Button x:Name="btnSaveAll" ToolTip="Save All" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnSaveAll_Click"  >
                <Button.Content>
                    <Image Source="Resources/Icons/ui-editoricon-general_save.png" Stretch="Fill" />
                </Button.Content>
            </Button>

            <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="10,0,10,0"  Width="1" Fill="{DynamicResource BackgroundLight}" />

            <Button x:Name="btnUndo" ToolTip="WESTRING_TOOLBAR_UNDO" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnUndo_Click" >
                <Button.Content>
                    <Image Source="Resources/Icons/undo.png" Stretch="Fill" />
                </Button.Content>
            </Button>
            <Button x:Name="btnRedo" ToolTip="WESTRING_TOOLBAR_REDO" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnRedo_Click" >
                <Button.Content>
                    <Image Source="Resources/Icons/redo.png" Stretch="Fill" />
                </Button.Content>
            </Button>
            <!--<Button x:Name="btnCut" ToolTip="WESTRING_TOOLBAR_CUT" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnCut_Click"  >
                <Button.Content>
                    <Image Source="Resources/Icons/ui-editoricon-general_cut.png" Stretch="Fill" />
                </Button.Content>
            </Button>
            <Button x:Name="btnCopy" ToolTip="WESTRING_TOOLBAR_COPY" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnCopy_Click"  >
                <Button.Content>
                    <Image Source="Resources/Icons/ui-editoricon-general_copy.png" Stretch="Fill" />
                </Button.Content>
            </Button>
            <Button x:Name="btnPaste" ToolTip="WESTRING_TOOLBAR_PASTE" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnPaste_Click"  >
                <Button.Content>
                    <Image Source="Resources/Icons/ui-editoricon-general_paste.png" Stretch="Fill" />
                </Button.Content>
            </Button>-->


            <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="10,0,10,0" Width="1" Fill="{DynamicResource BackgroundLight}" />

            <Button x:Name="btnVariableMenu" IsEnabled="False" ToolTip="WESTRING_VARIABLESCATEGORY" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnVariableMenu_Click" >
                <Button.Content>
                    <Image Source="Resources/Icons/editor-toolbar-triggeraddvariable.png" Stretch="None"/>
                </Button.Content>
            </Button>

            <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="10,0,10,0" Width="1" Fill="{DynamicResource BackgroundLight}" />

            <Button x:Name="btnCreateFolder" IsEnabled="False" ToolTip="WESTRING_TOOLBAR_SE_NEWCAT" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnCreateFolder_Click" >
                <Button.Content>
                    <Image Source="Resources/Icons/ui-editoricon-triggercategories_folder.png" Stretch="None"/>
                </Button.Content>
            </Button>
            <Button x:Name="btnCreateTrigger" IsEnabled="False" ToolTip="WESTRING_TOOLBAR_SE_NEWTRIG" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnCreateTrigger_Click">
                <Button.Content>
                    <Image Source="Resources/Icons/ui-editoricon-triggercategories_element.png" Stretch="None" />
                </Button.Content>
            </Button>
            <Button x:Name="btnCreateScript" IsEnabled="False" ToolTip="WESTRING_TOOLBAR_SE_NEWCUSSCR" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnCreateScript_Click" >
                <Button.Content >
                    <Image Source="Resources/Icons/editor-triggerscript.png" Stretch="None" />
                </Button.Content>
            </Button>
            <Button x:Name="btnCreateVariable" IsEnabled="False" ToolTip="WESTRING_TOOLBAR_SE_NEWGLOVAR" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnCreateVariable_Click">
                <Button.Content>
                    <Image Source="Resources/Icons/actions-setvariables.png" Stretch="None"/>
                </Button.Content>
            </Button>

            <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="10,0,10,0" Width="1" Fill="{DynamicResource BackgroundLight}" />

            <Button x:Name="btnCreateEvent" IsEnabled="False" ToolTip="WESTRING_TOOLBAR_SE_EVENT" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnCreateEvent_Click">
                <Button.Content>
                    <Image Source="Resources/Icons/editor-triggerevent.png" Stretch="None"/>
                </Button.Content>
            </Button>
            <Button x:Name="btnCreateCondition" IsEnabled="False" ToolTip="WESTRING_TOOLBAR_SE_COND" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnCreateCondition_Click">
                <Button.Content>
                    <Image Source="Resources/Icons/editor-triggercondition.png" Stretch="None"/>
                </Button.Content>
            </Button>
            <Button x:Name="btnCreateAction" IsEnabled="False" ToolTip="WESTRING_TOOLBAR_SE_ACTION" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left"  Click="btnCreateAction_Click">
                <Button.Content>
                    <Image Source="Resources/Icons/editor-triggeraction.png" Stretch="None"/>
                </Button.Content>
            </Button>
            <Button x:Name="btnCreateLocalVariable" IsEnabled="False" ToolTip="New Local Variable" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnCreateLocalVariable_Click" >
                <Button.Content>
                    <Image Source="Resources/Icons/actions-setvariables-alpha.png" Stretch="None"/>
                </Button.Content>
            </Button>
            <Button x:Name="btnSaveScript" IsEnabled="False" ToolTip="WESTRING_MENU_VALIDATE_MAP_TRIGGERS" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnSaveScript_Click">
                <Button.Content>
                    <Image Source="Resources/Icons/editor-toolbar-mapvalidation.png" Stretch="None"/>
                </Button.Content>
            </Button>

            <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="10,0,10,0" Width="1" Fill="{DynamicResource BackgroundLight}" />

            <Button x:Name="btnTestMap" IsEnabled="False" ToolTip="WESTRING_PREFTAB_TESTMAP" Style="{DynamicResource IconButton}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnTestMap_Click"  >
                <Button.Content>
                    <Image Source="Resources/Icons/editor-testmap.dds" Stretch="None"/>
                </Button.Content>
            </Button>
            <Button x:Name="btnBuildMap" IsEnabled="False" ToolTip="WESTRING_TOOLBAR_CE_EXPORTMAP" Style="{DynamicResource IconButton}" Margin="10,0,0,0" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnBuildMap_Click"  >
                <Button.Content>
                    <Image Source="Resources/Icons/editor-toolbar-exportmap.dds" Stretch="None"/>
                </Button.Content>
            </Button>
        </ItemsControl>
        <Button x:Name="btnGameVersion" Foreground="{DynamicResource TextBrush}" Width="auto" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Right" Margin="0,0,20,0" Style="{DynamicResource IconButton}" Click="btnGameVersion_Click" ></Button>

        <GridSplitter Grid.Row="2" Grid.RowSpan="4" Grid.Column="0" Width="5" Background="#00404040" Margin="0,4,0,0" DragCompleted="GridSplitter_DragCompleted"/>

        <TabControl x:Name="tabControl" Grid.Row="3" Grid.Column="1" Grid.RowSpan="2" BorderThickness="0" Padding="0" SelectionChanged="tabControl_SelectionChanged" ContextMenuOpening="tabControl_ContextMenuOpening" >
            <TabControl.ContextMenu>
                <ContextMenu x:Name="contextMenu" Foreground="{DynamicResource TextBrush2}" BorderBrush="#0000" Background="{DynamicResource BackgroundDark}">
                    <MenuItem x:Name="tabitem_Menu_Close" Header="Close" Click="tabitem_Menu_Close_Click" />
                    <MenuItem x:Name="tabitem_Menu_CloseAll" Header="Close All" Click="tabitem_Menu_CloseAll_Click" />
                </ContextMenu>
            </TabControl.ContextMenu>

            
            <TabControl.Template>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ScrollViewer HorizontalScrollBarVisibility="Auto"  VerticalScrollBarVisibility="Hidden" >
                            <TabPanel x:Name="HeaderPanel"
                          Panel.ZIndex ="1" 
                          KeyboardNavigation.TabIndex="1"
                          Grid.Column="0"
                          Grid.Row="0"
                          Margin="2,2,2,0"
                          IsItemsHost="true"/>
                        </ScrollViewer>
                        <ContentPresenter x:Name="PART_SelectedContentHost"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      Margin="{TemplateBinding Padding}"
                                      ContentSource="SelectedContent" Grid.Row="1"/>
                    </Grid>
                </ControlTemplate>
            </TabControl.Template>


            <TabControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" Height="21" >
                        <TextBlock Width="auto" Text="{Binding Header}" ToolTip="{Binding Header}" VerticalAlignment="Center" />
                        <Button Style="{DynamicResource IconButton}" Width="20" Height="20" Click="ButtonTabItem_Click" >
                            <Button.Content>
                                <Image Source="{DynamicResource TabItemCloseImg}" Stretch="None"/>
                            </Button.Content>
                        </Button>
                    </StackPanel>
                </DataTemplate>
            </TabControl.ItemTemplate>
            <TabControl.ContentTemplate>
                <DataTemplate>
                    <UserControl Content="{Binding Content}" Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                </DataTemplate>
            </TabControl.ContentTemplate>

            <TabControl.Resources>
                <Style TargetType="TabItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Border Name="Border" BorderThickness="1,1,1,0" HorizontalAlignment="Stretch" Width="auto" BorderBrush="{DynamicResource TopMenuButtonClicked}" CornerRadius="2,2,0,0" Margin="2,0" >
                                    <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Stretch"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundPanel}" />
                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush2}"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundDark}" />
                                        <Setter Property="Foreground" Value="{DynamicResource TextBrushDim}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>



                <!-- Background -->
                <ItemsPanelTemplate x:Key="MenuItemPanelTemplate">
                    <StackPanel Margin="-2,0,0,0" Background="{DynamicResource BackgroundPanel}"/>
                </ItemsPanelTemplate>

                <!-- Menu Item customization -->
                <ControlTemplate x:Key="MyMenuItemTemplateKey" TargetType="MenuItem">
                    <Grid Name="Border" Height="25">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="32" SharedSizeGroup="Icon"/>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                            <ColumnDefinition Width="13"/>
                        </Grid.ColumnDefinitions>

                        <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" Margin="5,0,0,0" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="10,2,2,2" VerticalAlignment="Center" DockPanel.Dock="Right" />
                        <Border Name="BorderChecked" Grid.Column="3" CornerRadius="2" Background="Transparent" Margin="5,2,5,2"/>
                        <Border Name="BorderDisable" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="Transparent"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#880088FF"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#880088FF"/>
                            <Setter TargetName="BorderDisable" Property="Background" Value="Green"/>
                            <Setter TargetName="BorderChecked" Property="Background" Value="#00FF00"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BorderDisable" Property="Background" Value="#3FFFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

                <!-- Extra styles -->
                <Style x:Key="MyMenuItemStyle" TargetType="MenuItem">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Style.Triggers>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Template" Value="{StaticResource MyMenuItemTemplateKey}"/>
                        </Trigger>

                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="Template" Value="{StaticResource MyMenuItemTemplateKey}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="#66CC66"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type ContextMenu}">
                    <Setter Property="SnapsToDevicePixels"
          Value="True" />
                    <Setter Property="HasDropShadow"
          Value="True" />
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="ItemsPanel" Value="{StaticResource MenuItemPanelTemplate}"/>
                </Style>
            </TabControl.Resources>

        </TabControl>

    </Grid>

</Window>
