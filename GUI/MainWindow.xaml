<Window x:Class="GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:gui="clr-namespace:GUI"
        UseLayoutRounding="True"
        mc:Ignorable="d"
        Title="Better Triggers" Height="686" Width="994" Background="#FF131313" KeyDown="Window_KeyDown" WindowStartupLocation="CenterScreen" WindowState="Normal" Closing="Window_Closing" >
    <!--Title="Better Triggers" Height="686" Width="994" Background="#FF131313" KeyDown="Window_KeyDown" ResizeMode="CanResize" WindowStyle="None" WindowStartupLocation="Manual" WindowState="Normal" AllowsTransparency="True" > -->
    <Window.Resources>
        <Style x:Key="Chromeless" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border BorderThickness="0" Width="54" Height="54">
                            <ContentPresenter/>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FFBBBBBB"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#33999999"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <!--<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/> -->
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Width" Value="24" />
            <Setter Property="Height" Value="24" />
            <Setter Property="BorderBrush" Value="#00000000" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#555"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#222"/>
                                <Setter Property="Border.CornerRadius" TargetName="border" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#777"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#222"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.2"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        
        <!--MENU-->
        <LinearGradientBrush x:Key="DarkBrush" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#939393" Offset="0.0"/>
                    <GradientStop Color="#717171" Offset="0.05"/>
                    <GradientStop Color="#606060" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="Clicked" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#363636" Offset="0.0"/>
                    <GradientStop Color="#393939" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>


        <Style x:Key="{x:Type Menu}" TargetType="Menu">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Menu">
                        <Border x:Name="MainMenu" Background="#282828">
                            <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="MenuItemControlTemplate1" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" 
                BorderBrush="#0000" 
                CornerRadius="3" 
                BorderThickness="1" 
                Background="{TemplateBinding Background}" 
                SnapsToDevicePixels="True">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>


                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup x:Name="PART_Popup"  AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                        <Border x:Name="SubMenuBorder" BorderBrush="#595959" BorderThickness="1" Background="#3A3A3A" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>

                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource DarkBrush}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#2C2C2C"/>
                    <Setter Property="BorderThickness" TargetName="templateRoot" Value="1"></Setter>
                </Trigger>

                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource Clicked}" />
                    <Setter Property="Header" Value="Test" />
                    <Setter Property="BorderBrush" Value="#2C2C2C"></Setter>
                    <Setter Property="BorderThickness" Value="1"></Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="MenuItemControlTemplate2" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Border x:Name="GlyphPanel" BorderBrush="#FF26A0DA" BorderThickness="1" Background="#3D26A0DA" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                        <Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="#FF212121" FlowDirection="LeftToRight" Height="11" Width="10"/>
                    </Border>
                    <ContentPresenter x:Name="menuHeaderContainer" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#09f"/>
                    <Setter Property="Background" TargetName="templateRoot" Value="#409f"/>
                    <Setter Property="TextBlock.Foreground" TargetName="menuHeaderContainer" Value="#aaf" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="#FF707070"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="templateRoot" Value="#0A000000"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        


        <!-- I don't know much about styling, but this is what is happening:
        The below menu style is needed for the top menu strip, but it overrides
        styles for the entire project.
        However, we still need a style for ContextMenu in TriggerControl
        and TriggerExplorer because it doesn't override all of it...
        
        -->


        <!-- SubmenuItem -->

        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
            <Border Name="Border">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="Shortcut" />
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Name="Icon"
                                  Margin="6,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon" />
                    <Border Name="Check"
                        Width="13"
                        Height="13"
                        Visibility="Collapsed"
                        Margin="6,0,6,0"
                        Background="#0000"
                        BorderThickness="0"
                        BorderBrush="#5082a4">
                        <Path Name="CheckMark"
                          Width="10"
                          Height="10"
                          Visibility="Hidden"
                          SnapsToDevicePixels="False"
                          Stroke="#0a0"
                          StrokeThickness="2"
                          Data="F1 M 0.468732,4.66838L 3.03345,7.95443L 7.28127,0.420569" />
                    </Border>
                    <ContentPresenter Name="HeaderHost"
                                  Grid.Column="1"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="5,2,0,2"
                           DockPanel.Dock="Right" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon"
                     Value="{x:Null}">
                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Hidden" />
                </Trigger>
                <Trigger Property="IsChecked"
                     Value="true">
                    <Setter TargetName="CheckMark"
                        Property="Visibility"
                        Value="Visible" />
                </Trigger>
                <Trigger Property="IsChecked"
                     Value="false">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                    <Setter TargetName="CheckMark" Property="Stroke" Value="#f44" />
                    <Setter TargetName="CheckMark" Property="Data" Value="M 0 0 L 7 7 M 0 7 L 7 0" />
                </Trigger>
                <Trigger Property="IsCheckable"
                     Value="true">
                    <Setter TargetName="Check"
                        Property="Visibility"
                        Value="Visible" />
                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Hidden" />
                </Trigger>
                <Trigger Property="IsHighlighted"
                     Value="true">
                    <Setter TargetName="Border"
                        Property="Background"
                        Value="#5082a4" />
                </Trigger>
                <Trigger Property="IsEnabled"
                     Value="false">
                    <Setter Property="Foreground"
                        Value="#555" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- SubmenuHeader -->

        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
            <Border Name="Border">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="Shortcut" />
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Name="Icon"
                                  Margin="6,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon" />
                    <ContentPresenter Name="HeaderHost"
                                  Grid.Column="1"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="5,2,2,2"
                           DockPanel.Dock="Right" />
                    <Path Grid.Column="3"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 0 7 L 4 3.5 Z"
                      Fill="#eee" />
                    <Popup Name="Popup"
                       Placement="Right"
                       HorizontalOffset="-4"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Fade">
                        <Border Name="SubmenuBorder"
                            SnapsToDevicePixels="True"
                            Background="#333"
                            BorderBrush="#555"
                            BorderThickness="1">
                            <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="Icon"
                     Value="{x:Null}">
                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsHighlighted"
                     Value="true">
                    <Setter TargetName="Border"
                        Property="Background"
                        Value="#5082a4" />
                </Trigger>
                <Trigger SourceName="Popup"
                     Property="Popup.AllowsTransparency"
                     Value="True">
                    <Setter TargetName="SubmenuBorder"
                        Property="CornerRadius"
                        Value="0" />
                    <Setter TargetName="SubmenuBorder"
                        Property="Padding"
                        Value="0,3,0,3" />
                </Trigger>
                <Trigger Property="IsEnabled"
                     Value="false">
                    <Setter Property="Foreground"
                        Value="#0f3c5a" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


    </Window.Resources>



    <Grid x:Name="mainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="28"/>
            <RowDefinition Height="4"/>
            <RowDefinition Height="125"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>


        <Menu Grid.Column="0"  Grid.Row="0" Grid.ColumnSpan="2" Background="#FF282828" Foreground="#eee" MouseLeftButtonDown="Menu_MouseLeftButtonDown" >
            <MenuItem x:Name="menuFile" Header="WESTRING_MENU_FILE" Height="25" Template="{DynamicResource MenuItemControlTemplate1}" >
                <MenuItem Name="menuNewProject" Header="New Project..." Click="menuNewProject_Click"/>
                <MenuItem Name="menuOpen" Header="WESTRING_MENU_OPEN" Click="menuOpen_Click"/>
                <MenuItem Name="menuSave" Header="Save All" Click="menuSave_Click"/>
                <MenuItem Name="menuRecentFiles" Header="Recent Files"  MouseEnter="menuRecentFiles_MouseEnter" />
            </MenuItem>
            <MenuItem x:Name="menuEdit" Header="WESTRING_MENU_EDIT" Height="25" Template="{DynamicResource MenuItemControlTemplate1}" Foreground="#eee" SubmenuOpened="MenuItem_SubmenuOpened">
                <MenuItem Name="menuItemUndo" Header="Undo" Click="menuItemUndo_Click"/>
                <MenuItem Name="menuItemRedo" Header="Redo" Click="menuItemRedo_Click"/>
            </MenuItem>
            <MenuItem x:Name="menuNew" Header="WESTRING_MENU_TE_NEW" Template="{DynamicResource MenuItemControlTemplate1}" Height="25" SubmenuOpened="menuNew_SubmenuOpened">
                <MenuItem Name="menuNewCategory" Header="WESTRING_DEVAL_DCAT" Click="btnCreateFolder_Click"/>
                <MenuItem Name="menuNewTrigger" Header="WESTRING_DLGE_TRIGGER" Click="btnCreateTrigger_Click"/>
                <MenuItem Name="menuNewScript" Header="WESTRING_TRIGCAT_CUSTOM" Click="btnCreateScript_Click"/>
                <MenuItem Name="menuNewVariable" Header="WESTRING_MENU_GLOBLALVARIABLE"  Click="btnCreateVariable_Click" />
                <Separator></Separator>
                <MenuItem Name="menuNewEvent" Header="WESTRING_MENU_EVENT"  Click="btnCreateEvent_Click" />
                <MenuItem Name="menuNewCondition" Header="WESTRING_MENU_CONDITION"  Click="btnCreateCondition_Click" />
                <MenuItem Name="menuNewAction" Header="WESTRING_MENU_ACTION"  Click="btnCreateAction_Click" />
            </MenuItem>
            <MenuItem x:Name="menuJassHelper" Header="WESTRING_MENU_JASSHELPER" Template="{DynamicResource MenuItemControlTemplate1}" Height="25">
                <MenuItem Name="menuEnableJassHelper" Header="WESTRING_MENU_JASSHELPER_TOGGLE" />
                <MenuItem Name="menuEnableVJass" Header="WESTRING_MENU_JASSHELPER_TOGGLE_VJASS" />
                <MenuItem Name="menuEnableDebugMode" Header="WESTRING_MENU_JASSHELPER_TOGGLE_DEBUG" />
                <MenuItem Name="menuEnableOptimizer" Header="WESTRING_MENU_JASSHELPER_TOGGLE_OPTIMIZER" />
            </MenuItem>
            <MenuItem x:Name="menuTools" Header="WESTRING_MENU_TOOLS" Template="{DynamicResource MenuItemControlTemplate1}" Height="25">
                <MenuItem  Name="menuItemOptions" Header="WESTRING_MAPTAB_OPTIONS" Click="menuItemOptions_Click" />

            </MenuItem>
        </Menu>

        <Rectangle Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Top" Height="2" />
        <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Fill="#FF282828" MouseLeftButtonDown="Rectangle_MouseLeftButtonDown" />

        <ItemsControl Grid.Row="1" Grid.ColumnSpan="2" Margin="10,0,0,0">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Content="{Binding}" Margin="0,0,5,5" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <Button x:Name="btnNewMap" ToolTip="WESTRING_TOOLBAR_NEW" Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnNewMap_Click"  >
                <Button.Content>
                    <Image Source="Resources/Icons/map.png" Stretch="Fill"/>
                </Button.Content>
            </Button>
            <Button x:Name="btnOpenMap" ToolTip="WESTRING_TOOLBAR_OPEN" Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnOpenMap_Click"  >
                <Button.Content>
                    <Image Source="Resources/Icons/ui-editoricon-general_open.png" Stretch="Fill" />
                </Button.Content>
            </Button>
            <Button x:Name="btnSaveAll" ToolTip="Save All" Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnSaveAll_Click"  >
                <Button.Content>
                    <Image Source="Resources/Icons/ui-editoricon-general_save.png" Stretch="Fill" />
                </Button.Content>
            </Button>

            <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="10,0,10,0"  Width="1" Fill="#444" />

            <Button x:Name="btnUndo" ToolTip="WESTRING_TOOLBAR_UNDO" Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnUndo_Click" >
                <Button.Content>
                    <Image Source="Resources/Icons/undo.png" Stretch="Fill" />
                </Button.Content>
            </Button>
            <Button x:Name="btnRedo" ToolTip="WESTRING_TOOLBAR_REDO" Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnRedo_Click" >
                <Button.Content>
                    <Image Source="Resources/Icons/redo.png" Stretch="Fill" />
                </Button.Content>
            </Button>
            <Button x:Name="btnCut" ToolTip="WESTRING_TOOLBAR_CUT" Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnCut_Click"  >
                <Button.Content>
                    <Image Source="Resources/Icons/ui-editoricon-general_cut.png" Stretch="Fill" />
                </Button.Content>
            </Button>
            <Button x:Name="btnCopy" ToolTip="WESTRING_TOOLBAR_COPY" Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnCopy_Click"  >
                <Button.Content>
                    <Image Source="Resources/Icons/ui-editoricon-general_copy.png" Stretch="Fill" />
                </Button.Content>
            </Button>
            <Button x:Name="btnPaste" ToolTip="WESTRING_TOOLBAR_PASTE" Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnPaste_Click"  >
                <Button.Content>
                    <Image Source="Resources/Icons/ui-editoricon-general_paste.png" Stretch="Fill" />
                </Button.Content>
            </Button>


            <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="10,0,10,0" Width="1" Fill="#444" />

            <Button x:Name="btnCreateFolder" IsEnabled="False" ToolTip="WESTRING_TOOLBAR_SE_NEWCAT" Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnCreateFolder_Click" >
                <Button.Content>
                    <Image Source="Resources/Icons/ui-editoricon-triggercategories_folder.png" Stretch="None"/>
                </Button.Content>
            </Button>
            <Button x:Name="btnCreateTrigger" IsEnabled="False" ToolTip="WESTRING_TOOLBAR_SE_NEWTRIG" Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnCreateTrigger_Click">
                <Button.Content>
                    <Image Source="Resources/Icons/ui-editoricon-triggercategories_element.png" Stretch="None" />
                </Button.Content>
            </Button>
            <Button x:Name="btnCreateScript" IsEnabled="False" ToolTip="WESTRING_TOOLBAR_SE_NEWCUSSCR" Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnCreateScript_Click" >
                <Button.Content >
                    <Image Source="Resources/Icons/editor-triggerscript.png" Stretch="None" />
                </Button.Content>
            </Button>
            <Button x:Name="btnCreateVariable" IsEnabled="False" ToolTip="WESTRING_TOOLBAR_SE_NEWGLOVAR" Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnCreateVariable_Click">
                <Button.Content>
                    <Image Source="Resources/Icons/actions-setvariables.png" Stretch="None"/>
                </Button.Content>
            </Button>

            <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="10,0,10,0" Width="1" Fill="#444" />

            <Button x:Name="btnCreateEvent" IsEnabled="False" ToolTip="WESTRING_TOOLBAR_SE_EVENT" Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnCreateEvent_Click">
                <Button.Content>
                    <Image Source="Resources/Icons/editor-triggerevent.png" Stretch="None"/>
                </Button.Content>
            </Button>
            <Button x:Name="btnCreateCondition" IsEnabled="False" ToolTip="WESTRING_TOOLBAR_SE_COND" Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnCreateCondition_Click">
                <Button.Content>
                    <Image Source="Resources/Icons/editor-triggercondition.png" Stretch="None"/>
                </Button.Content>
            </Button>
            <Button x:Name="btnCreateAction" IsEnabled="False" ToolTip="WESTRING_TOOLBAR_SE_ACTION" Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left"  Click="btnCreateAction_Click">
                <Button.Content>
                    <Image Source="Resources/Icons/editor-triggeraction.png" Stretch="None"/>
                </Button.Content>
            </Button>
            <Button x:Name="btnSaveScript" IsEnabled="False" ToolTip="WESTRING_MENU_VALIDATE_MAP_TRIGGERS" Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnSaveScript_Click">
                <Button.Content>
                    <Image Source="Resources/Icons/editor-toolbar-mapvalidation.png" Stretch="None"/>
                </Button.Content>
            </Button>

            <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="10,0,10,0" Width="1" Fill="#444" />

            <Button x:Name="btnTestMap" IsEnabled="False" ToolTip="WESTRING_PREFTAB_TESTMAP" Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnTestMap_Click"  >
                <Button.Content>
                    <Image Source="Resources/Icons/editor-testmap.dds" Stretch="None"/>
                </Button.Content>
            </Button>
            <Button x:Name="btnBuildMap" IsEnabled="False" ToolTip="WESTRING_TOOLBAR_CE_EXPORTMAP" Style="{DynamicResource ButtonStyle1}" Margin="10,0,0,0" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Click="btnBuildMap_Click"  >
                <Button.Content>
                    <Image Source="Resources/Icons/editor-toolbar-exportmap.dds" Stretch="None"/>
                </Button.Content>
            </Button>
        </ItemsControl>


        <GridSplitter Grid.Row="2" Grid.RowSpan="4" Grid.Column="0" Width="5" Background="#00404040" Margin="0,4,0,0"/>

        <gui:TabControl_BT x:Name="tabControl" Grid.Row="3" Grid.Column="1" Grid.RowSpan="2" Background="#FF202020"  />

    </Grid>

</Window>
