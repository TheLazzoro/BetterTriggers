<UserControl x:Class="GUI.Components.TriggerExplorer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GUI.Components"
             xmlns:betterTriggers="clr-namespace:BetterTriggers.Models.EditorData;assembly=BetterTriggers"
             mc:Ignorable="d"
             d:DesignHeight="450" Width="400" KeyDown="UserControl_KeyDown">

    <Grid>

        <TreeView
            x:Name="treeViewTriggerExplorer"
            ItemsSource="{Binding ProjectFiles}"
            Background="{DynamicResource BackgroundDark}"
            ItemTemplate="{DynamicResource DataTemplateExplorerElements}"
            AllowDrop="True"
            BorderBrush="{x:Null}"
            Drop="treeViewTriggerExplorer_Drop"
            KeyDown="treeViewTriggerExplorer_KeyDown"
            ContextMenuOpening="contextMenu_ContextMenuOpening"
            >

            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                    <!-- We have to select the item which is right-clicked on -->
                    <!--<EventSetter Event="TreeViewItem.PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>-->
                    <EventSetter Event="TreeViewItem.DragOver" Handler="treeViewItem_DragOver"/>
                    <EventSetter Event="TreeViewItem.MouseMove" Handler="treeViewItem_PreviewMouseMove"/>
                    <EventSetter Event="TreeViewItem.MouseRightButtonUp" Handler="treeViewItem_MouseRightButtonUp"/>
                    <EventSetter Event="TreeViewItem.MouseDoubleClick" Handler="treeViewItem_MouseDoubleClick"/>
                    <EventSetter Event="TreeViewItem.Selected" Handler="treeViewItem_Selected" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpandedTreeItem, Mode=TwoWay}" />
                </Style>
            </TreeView.ItemContainerStyle>

            <TreeView.ContextMenu>
                <ContextMenu Name="contextMenu">
                    <MenuItem x:Name="menuCut" Header="Cut" Click="menuCut_Click"></MenuItem>
                    <MenuItem x:Name="menuCopy" Header="Copy" Click="menuCopy_Click"></MenuItem>
                    <MenuItem x:Name="menuPaste" Header="Paste" Click="menuPaste_Click"></MenuItem>
                    <MenuItem x:Name="menuRename" Header="Rename" Click="menuRename_Click"></MenuItem>
                    <MenuItem x:Name="menuDelete" Header="Delete" Click="menuDelete_Click"></MenuItem>
                    <Separator Background="{DynamicResource SeparatorBrush}"></Separator>
                    <MenuItem x:Name="menuNewCategory" Header="New Category" Click="menuNewCategory_Click">
                        <MenuItem.Icon>
                            <Image Source="/Resources/Icons/ui-editoricon-triggercategories_folder.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="menuNewTrigger" Header="New Trigger" Click="menuNewTrigger_Click">
                        <MenuItem.Icon>
                            <Image Source="/Resources/Icons/ui-editoricon-triggercategories_element.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="menuNewScript" Header="New Custom Script" Click="menuNewScript_Click">
                        <MenuItem.Icon>
                            <Image Source="/Resources/Icons/actions-ai.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="menuNewVariable" Header="New Global Variable" Click="menuNewVariable_Click">
                        <MenuItem.Icon>
                            <Image Source="/Resources/Icons/actions-setvariables.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator Background="{DynamicResource SeparatorBrush}"></Separator>
                    <MenuItem x:Name="menuElementEnabled" Header="Enable Trigger" IsCheckable="True" Click="menuElementEnabled_Click"/>
                    <MenuItem x:Name="menuElementInitiallyOn" Header="Initially On" IsCheckable="True" Click="menuElementInitiallyOn_Click"/>
                    <Separator Background="{DynamicResource SeparatorBrush}"/>
                    <MenuItem x:Name="menuOpenInExplorer" Header="Open Containing Folder" Click="menuOpenInExplorer_Click"></MenuItem>

                </ContextMenu>
            </TreeView.ContextMenu>
        </TreeView>

        <Grid x:Name="searchMenu" Visibility="Hidden" KeyDown="searchMenu_KeyDown" >
            <Grid.RowDefinitions>
                <RowDefinition Height="28"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Rectangle Fill="{DynamicResource BackgroundLight}"/>
            <Label Content="Search:"
                   Foreground="{DynamicResource TextBrush}"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Left"
                   Width="50" />
            
            <TextBox x:Name="searchBox"
                     Height="22"
                     Margin="60,0,25,0"
                     TextChanged="searchBox_TextChanged" />
            
            <Button x:Name="btnCloseSearchMenu"
                    Margin="0,0,2,0"
                    Width="20"
                    Height="20"
                    Style="{DynamicResource IconButton}"
                    Grid.Row="0"
                    Grid.ColumnSpan="2"
                    HorizontalAlignment="Right"
                    Click="btnCloseSearchMenu_Click" >
                <Button.Content>
                    <Image Source="{DynamicResource TabItemCloseImg}" Stretch="Fill"/>
                </Button.Content>
            </Button>
            
            <ListView x:Name="listViewSearch"
                      Background="{DynamicResource BackgroundDark}"
                      BorderBrush="{DynamicResource BackgroundDark}"
                      ItemsSource="{Binding SearchedFiles}"
                      ItemTemplate="{DynamicResource DataTemplateExplorerElementsSearch}"
                      Grid.Row="1"
                      KeyDown="listViewSearch_KeyDown" >

                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
                        <EventSetter Event="ListViewItem.MouseRightButtonUp" Handler="listViewItem_MouseRightButtonUp"/>
                        <EventSetter Event="ListViewItem.MouseDoubleClick" Handler="listViewItem_MouseDoubleClick"/>
                    </Style>
                </ListView.ItemContainerStyle>

            </ListView>
        </Grid>

    </Grid>
</UserControl>
