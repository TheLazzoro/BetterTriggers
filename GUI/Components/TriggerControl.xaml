<UserControl x:Class="GUI.Components.TriggerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GUI"
             mc:Ignorable="d" Background="#363636">
    <UserControl.Resources>
        <!-- Background -->
        <ItemsPanelTemplate x:Key="MenuItemPanelTemplate">
            <StackPanel Margin="-2,0,0,0" Background="#333333"/>
        </ItemsPanelTemplate>

        <!-- Item customization -->
        <ControlTemplate x:Key="MyMenuItemTemplateKey" TargetType="MenuItem">
            <Grid Name="Border" Height="25">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="32" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" Margin="5,0,0,0" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="10,2,2,2" VerticalAlignment="Center" DockPanel.Dock="Right" />
                <Border Name="BorderChecked" Grid.Column="3" CornerRadius="2" Background="Transparent" Margin="5,2,5,2"/>
                <Border Name="BorderDisable" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="Transparent"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#880088FF"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#880088FF"/>
                    <Setter TargetName="BorderDisable" Property="Background" Value="Green"/>
                    <Setter TargetName="BorderChecked" Property="Background" Value="#00FF00"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="BorderDisable" Property="Background" Value="#3FFFFFFF"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Extra styles -->
        <Style x:Key="MyMenuItemStyle" TargetType="MenuItem">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Template" Value="{StaticResource MyMenuItemTemplateKey}"/>
                </Trigger>

                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Template" Value="{StaticResource MyMenuItemTemplateKey}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="#66CC66"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="SnapsToDevicePixels"
          Value="True" />
            <Setter Property="HasDropShadow"
          Value="True" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ItemsPanel" Value="{StaticResource MenuItemPanelTemplate}"/>
        </Style>
    </UserControl.Resources>


    <Grid x:Name="grid">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="75"/>
            <RowDefinition Height="75"/>
        </Grid.RowDefinitions>

        <CheckBox x:Name="checkBoxIsEnabled" Content="Enabled" IsChecked="True" Foreground="White" Margin="5,5,0,0" Click="checkBoxIsEnabled_Click" />
        <CheckBox x:Name="checkBoxIsInitiallyOn" Content="Initially On" IsChecked="True" Foreground="White" Margin="100,5,0,0" Click="checkBoxIsInitiallyOn_Click"/>
        <Label Content="Trigger Comment:" VerticalAlignment="Top" Foreground="White" Margin="0,24,0,0"/>

        <RichTextBox x:Name="richTextBoxComment" Background="#FF282828" BorderBrush="#00828790" Grid.Row="1"/>

        <GridSplitter Grid.Row="2" Height="3" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="#00F0F0F0" Margin="0,3,0,0" />
        <Label Content="Trigger Functions:" VerticalAlignment="Top" Foreground="White" Margin="0,10,0,0" Grid.Row="2"/>

        <TreeView x:Name="treeViewTriggers" Background="#FF282828" BorderBrush="#00828790" Grid.Row="2" Margin="0,35,0,0" MinHeight="100" AllowDrop="True" SelectedItemChanged="treeViewTriggers_SelectedItemChanged" PreviewMouseLeftButtonDown="treeViewTriggers_PreviewMouseLeftButtonDown" PreviewMouseMove="treeViewTriggers_PreviewMouseMove" Drop="treeViewTriggers_Drop" PreviewDragEnter="treeViewTriggers_PreviewDragEnter" PreviewDrop="treeViewTriggers_PreviewDrop" KeyDown="treeViewTriggers_KeyDown" MouseRightButtonUp="treeViewTriggers_MouseRightButtonUp">
            <TreeView.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                Color="#aa357EC7" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                      Color="Black" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                      Color="#44FFFFFF" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                      Color="Black" />
            </TreeView.Resources>
            
            <TreeView.ContextMenu>
                <ContextMenu Name="contextMenu" Background="#FF282828" Foreground="#EEE">
                    <MenuItem x:Name="menuCut" Header="Cut" Click="menuCut_Click"></MenuItem>
                    <MenuItem x:Name="menuCopy" Header="Copy" Click="menuCopy_Click"></MenuItem>
                    <MenuItem  x:Name="menuCopyAsText" Header="Copy As Text" Click="menuCopyAsText_Click"></MenuItem>
                    <MenuItem x:Name="menuPaste" Header="Paste" Click="menuPaste_Click"></MenuItem>
                    <MenuItem x:Name="menuDelete" Header="Delete" Click="menuDelete_Click"></MenuItem>
                    <Separator Background="#555555"></Separator>
                    <MenuItem x:Name="menuEvent" Header="New Event" Click="menuEvent_Click">
                        <MenuItem.Icon>
                            <Image Source="/Resources/Icons/editor-triggerevent.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="menuCondition" Header="New Condition" Click="menuCondition_Click">
                        <MenuItem.Icon>
                            <Image Source="/Resources/Icons/editor-triggercondition.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="menuAction" Header="New Action" Click="menuAction_Click">
                        <MenuItem.Icon>
                            <Image Source="/Resources/Icons/editor-triggeraction.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator Background="#555555"></Separator>
                    <!--<MenuItem Header="Enable Function" IsCheckable="True" Style="{StaticResource MyMenuItemStyle}"/>-->
                    <MenuItem x:Name="menuFunctionEnabled" Header="Enable Function" IsCheckable="True" Click="menuFunctionEnabled_Click"/>
                </ContextMenu>
            </TreeView.ContextMenu>
        </TreeView>
        <GridSplitter Grid.Row="3" Height="3" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="#00F0F0F0" Margin="0,3,0,0" />

    </Grid>
</UserControl>
