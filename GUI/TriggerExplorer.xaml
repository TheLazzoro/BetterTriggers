<UserControl x:Class="GUI.TriggerExplorer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GUI.Components.TriggerExplorer"
             mc:Ignorable="d" 
             d:DesignHeight="450" Width="400">

    <UserControl.Resources>
        <!-- Background -->
        <ItemsPanelTemplate x:Key="MenuItemPanelTemplate">
            <StackPanel Margin="-2,0,0,0" Background="#333333"/>
        </ItemsPanelTemplate>

        <!-- Item customization -->
        <ControlTemplate x:Key="MyMenuItemTemplateKey" TargetType="MenuItem">
            <Grid Name="Border" Height="25">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="32" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" Margin="5,0,0,0" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="10,2,2,2" VerticalAlignment="Center" DockPanel.Dock="Right" />
                <Border Name="BorderChecked" Grid.Column="3" CornerRadius="2" Background="Transparent" Margin="5,2,5,2"/>
                <Border Name="BorderDisable" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="Transparent"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#880088FF"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#880088FF"/>
                    <Setter TargetName="BorderDisable" Property="Background" Value="Green"/>
                    <Setter TargetName="BorderChecked" Property="Background" Value="#00FF00"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="BorderDisable" Property="Background" Value="#3FFFFFFF"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Extra styles -->
        <Style x:Key="MyMenuItemStyle" TargetType="MenuItem">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Template" Value="{StaticResource MyMenuItemTemplateKey}"/>
                </Trigger>

                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Template" Value="{StaticResource MyMenuItemTemplateKey}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="#66CC66"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="SnapsToDevicePixels"
          Value="True" />
            <Setter Property="HasDropShadow"
          Value="True" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ItemsPanel" Value="{StaticResource MenuItemPanelTemplate}"/>
        </Style>
    </UserControl.Resources>

    <Grid>

        <TreeView x:Name="treeViewTriggerExplorer" Background="#282828" AllowDrop="True" BorderBrush="{x:Null}" Drop="treeViewTriggerExplorer_Drop" KeyDown="treeViewTriggerExplorer_KeyDown" MouseRightButtonUp="treeViewTriggerExplorer_MouseRightButtonUp" >
            <TreeView.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                Color="#357EC7" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                      Color="Black" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                      Color="#55FFFFFF" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                      Color="Black" />
            </TreeView.Resources>
            
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <!-- We have to select the item which is right-clicked on -->
                    <!--<EventSetter Event="TreeViewItem.PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>-->
                    <EventSetter Event="TreeViewItem.DragOver" Handler="treeViewItem_DragOver"/>
                    <EventSetter Event="TreeViewItem.MouseMove" Handler="treeViewItem_PreviewMouseMove"/>
                    <EventSetter Event="TreeViewItem.Expanded" Handler="treeViewItem_Expanded"/>
                    <EventSetter Event="TreeViewItem.Collapsed" Handler="treeViewItem_Collapsed"/>
                </Style>
            </TreeView.ItemContainerStyle>

            <TreeView.ContextMenu>
                <ContextMenu Name="contextMenu" Background="#333" Foreground="#EEE">
                    <MenuItem x:Name="menuCut" Header="Cut" Click="menuCut_Click"></MenuItem>
                    <MenuItem x:Name="menuCopy" Header="Copy" Click="menuCopy_Click"></MenuItem>
                    <MenuItem x:Name="menuPaste" Header="Paste" Click="menuPaste_Click"></MenuItem>
                    <MenuItem x:Name="menuRename" Header="Rename" Click="menuRename_Click"></MenuItem>
                    <MenuItem x:Name="menuDelete" Header="Delete" Click="menuDelete_Click"></MenuItem>
                    <Separator Background="#555555"></Separator>
                    <MenuItem x:Name="menuNewCategory" Header="New Category" Click="menuNewCategory_Click">
                        <MenuItem.Icon>
                            <Image Source="/Resources/Icons/ui-editoricon-triggercategories_folder.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="menuNewTrigger" Header="New Trigger" Click="menuNewTrigger_Click">
                        <MenuItem.Icon>
                            <Image Source="/Resources/Icons/ui-editoricon-triggercategories_element.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="menuNewScript" Header="New Custom Script" Click="menuNewScript_Click">
                        <MenuItem.Icon>
                            <Image Source="/Resources/Icons/actions-ai.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="menuNewVariable" Header="New Global Variable" Click="menuNewVariable_Click">
                        <MenuItem.Icon>
                            <Image Source="/Resources/Icons/actions-setvariables.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator Background="#555555"></Separator>
                    <!--<MenuItem Header="Enable Function" IsCheckable="True" Style="{StaticResource MyMenuItemStyle}"/>-->
                    <MenuItem x:Name="menuElementEnabled" Header="Enable Trigger" IsCheckable="True" Click="menuElementEnabled_Click"/>
                    <MenuItem x:Name="menuElementInitiallyOn" Header="Initially On" IsCheckable="True" Click="menuElementInitiallyOn_Click"/>
                    <Separator Background="#555555"></Separator>
                    <MenuItem x:Name="menuOpenInExplorer" Header="Open Containing Folder" Click="menuOpenInExplorer_Click"></MenuItem>

                </ContextMenu>
            </TreeView.ContextMenu>
        </TreeView>
    </Grid>
</UserControl>
